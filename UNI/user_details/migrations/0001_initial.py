# Generated by Django 5.2 on 2025-04-19 19:04

import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=455, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=355, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='static/profile/', verbose_name='screen Image')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, choices=[('User', 'User')], default='Student', max_length=30, null=True, verbose_name='user_type')),
                ('mobile', models.CharField(max_length=13, unique=True, verbose_name='Mobile')),
                ('recruit_slug', models.EmailField(blank=True, max_length=155, null=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('linkedin_url', models.CharField(blank=True, max_length=355, null=True)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0, verbose_name='Priority')),
                ('banner', models.FileField(blank=True, null=True, upload_to='static/banner/', verbose_name='Banner Image')),
                ('is_for_app', models.BooleanField(default=True, verbose_name='For Mobile')),
                ('is_for_web', models.BooleanField(default=False, verbose_name='For Web')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'indexes': [models.Index(fields=['is_for_app'], name='user_detail_is_for__7bc437_idx'), models.Index(fields=['is_for_web'], name='user_detail_is_for__0e6808_idx')],
            },
        ),
        migrations.CreateModel(
            name='FirebaseDevices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_id', models.CharField(db_index=True, max_length=1024)),
                ('device_type', models.CharField(choices=[('Web', 'Web'), ('Mobile', 'Mobile')], default='mobile', max_length=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Firebase Device',
                'verbose_name_plural': 'Firebase Devices',
            },
        ),
        migrations.CreateModel(
            name='OTPStorage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mobile', models.IntegerField(blank=True, null=True, verbose_name='Mobile Number')),
                ('email_id', models.EmailField(blank=True, max_length=455, null=True)),
                ('otp_code', models.CharField(max_length=4)),
                ('otp_expiration_time', models.DateTimeField(blank=True, null=True, verbose_name='OTP Key Expiration DateTime')),
                ('attempt', models.IntegerField()),
                ('is_verified', models.BooleanField(default=False, verbose_name='mobile Verified')),
                ('resend_count', models.IntegerField()),
                ('is_active', models.BooleanField(default=False, verbose_name='mobile Verified')),
            ],
            options={
                'verbose_name': 'OTP Storage',
                'verbose_name_plural': 'OTP Storages',
                'permissions': (),
                'indexes': [models.Index(fields=['mobile'], name='user_detail_mobile_7f76cf_idx'), models.Index(fields=['email_id'], name='user_detail_email_i_54b519_idx'), models.Index(fields=['otp_code'], name='user_detail_otp_cod_4414f7_idx'), models.Index(fields=['is_verified'], name='user_detail_is_veri_531e03_idx'), models.Index(fields=['is_active'], name='user_detail_is_acti_0a39df_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserTokens',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('user', 'user')], default='user', max_length=24)),
                ('token', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Tokens',
                'verbose_name_plural': 'User Tokens',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_detail_email_ae8301_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['mobile'], name='user_detail_mobile_03c054_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='user_detail_is_acti_3e9b4b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_superuser'], name='user_detail_is_supe_8976a3_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='user_detail_user_ty_058d6e_idx'),
        ),
        migrations.AddIndex(
            model_name='firebasedevices',
            index=models.Index(fields=['user'], name='user_detail_user_id_51ff4f_idx'),
        ),
        migrations.AddIndex(
            model_name='firebasedevices',
            index=models.Index(fields=['device_id'], name='user_detail_device__b8fea6_idx'),
        ),
        migrations.AddIndex(
            model_name='firebasedevices',
            index=models.Index(fields=['is_active'], name='user_detail_is_acti_55f4c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='firebasedevices',
            unique_together={('user', 'device_id')},
        ),
        migrations.AddIndex(
            model_name='usertokens',
            index=models.Index(fields=['user'], name='user_detail_user_id_b88ed9_idx'),
        ),
    ]
